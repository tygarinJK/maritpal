<?php
/**
 * @file
 * Maritpal Account Balance
 */

/**
 * Implements hook_permission().
 */
function maritpal_account_balance_permission() {
  return array(
    'admin settings' => array(
      'title' => t('Administrate settings'),
      'description' => t('Administrate account balance settings settings'),
    ),
    'view own transactions' => array(
      'title' => t('View own transactions'),
      'description' => t('Acccess overview and details of transactions made'),
    ),
    'view all transactions' => array(
      'title' => t('View any transactions'),
    ),
    'deposit to own account' => array(
      'title' => t('Deposit to own account'),
      'description' => t('Deposit money to own user account'),
    ),
    'deposit to any account' => array(
      'title' => t('Deposit money to any user account'),
      'description' => t('Deposit money to any user account'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function maritpal_account_balance_menu() {
  $items = array();

  $items['admin/config/people/account-balance'] = array(
    'title' => t('Account balance settings'),
    'description' => t(''),
    'page callback' => 'maritpal_account_balance_admit_settings_form',
    'access arguments' => array('admit settings'),
    'file' => 'includes/maritpal_account_balance.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['user/%user/balance'] = array(
    'title' => t('Account balance'),
    'description' => t('Consult account balance and deposit money'),
    'page callback' => 'maritpal_account_balance_review',
    'page arguments' => array(1),
    'access arguments' => array('deposit to own account'),
    'file' => 'includes/maritpal_account_balance.pages.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['user/%user/balance/add'] = array(
    'title' => t('Refill account balance'),
    'description' => t(''),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('maritpal_account_balance_refill_form', 1),
    'access arguments' => array('deposit to own account'),
    'file' => 'includes/maritpal_account_balance.pages.inc',
    'type' => MENU_LOCAL_ACTION,
  );

  return $items;
}

/**
 * Implements hook_commerce_line_item_type_info().
 */
function maritpal_account_balance_commerce_line_item_type_info() {
  $line_item_types = array();

  $line_item_types['deposit'] = array(
    'type' => 'deposit',
    'name' => t('Deposit'),
    'description' => t('Line item to deposit money to the account'),
    'product' => FALSE,
    'add_form_submit_value' => t('Add deposit form'),
    'base' => 'maritpal_account_balance_line_item',
  );
  return $line_item_types;
}

/**
 * Configuration callback for the deposit line item.
 */
function maritpal_account_balance_line_item_configuration($line_item_type) {
  $type = $line_item_type['type'];
  $field_name = "commerce_deposit_amount";
  $field = field_info_field($field_name);
  $instance = field_info_instance('commerce_line_item', $field_name, $type);
  if (empty($field)) {
    $field = array(
      'field_name' => $field_name,
      'type' => 'number_float',
      'cardinality' => 1,
      'entity_types' => array('commerce_line_item'),
      'translatable' => FALSE,
    );
    $field = field_create_field($field);
  }

  if (empty($instance)) {
    $instance = array(
      'field_name' => $field_name,
      'entity_type' => 'commerce_line_item',
      'bundle' => $type,
      'label' => t('Deposit amount'),
      'required' => TRUE,
      'widget' => array(
        'type' => 'text_textfield',
      ),
      'settings' => array(
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'number_decimal',
          'settings' => array(
            'thousand_separator' => '',
            'decimal_separator' => '.',
            'scale' => 2,
            'prefix_suffix' => TRUE,
          ),
        ),
      ),
    );
    field_create_instance($instance);
  }
}

/**
 * Write balance transaction to db.
 *
 * @param obj $account
 *  User account object
 * @param str $type
 *  Transaction type may be "deposit" or "purchase"
 * @param float $amount_decimal
 *  Transaction amount
 * @param str $currency
 *  (optional) Transaction currency code or will be used deafult currency
 * @param str $action
 *  (optional) Transaction description
 * @param int $order_id
 *  (optional) Transaction order id
 * 
 */
function maritpal_account_balance_transaction_new($account, $type, $amount_decimal, $currency_code = NULL, $action = NULL, $order_id = NULL) {
  if (is_null($currency_code)) $currency = commerce_currency_load();
  else $currency = commerce_currency_load($currency_code);

  $currency_symbol = $currency['symbol'];

  $formatted_amount = round($amount_decimal, 2, PHP_ROUND_HALF_UP) .' '. $currency_code;

  if (is_null($action)) {
    if ($amount_decimal > 0) $action = t('Deposit @amount to your account', array('@amount' => $formatted_amount));
    else $action = t('Perchase @amount from your account', array('@amount' => $formatted_amount));
  }

  $result = db_insert('maritpal_account_balance_transaction')
    ->fields(array(
      'type' => $type,
      'action' => $action,
      'uid' => $account->uid,
      'time' => REQUEST_TIME,
      'amount' => $amount_decimal,
      'currency_code' => $currency_code,
    ))
    ->execute();

  return is_numeric($result) ? $result : FALSE;
}

/**
 * Select balance transactions for specific account.
 *
 * @return array
 *  All user transactions
 */
function maritpal_account_balance_transaction_get($account) {
  $result = db_select('maritpal_account_balance_transaction', 'ab')
    ->fields('ab')
    ->condition('uid', $account->uid, '=')
    ->execute()
    ->fetchAll();

  return $result;
}